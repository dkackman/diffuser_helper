{
    "variables": {
        "image_url": "https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers/tasks/car.jpg?download:true"
    },
    "id": "img2txt2img",
    "steps": [
        {
            "name": "input_image",
            "task": {
                "command": "gather_images",
                "arguments": {
                    "urls": [
                        "variable:image_url"
                    ]
                }
            },
            "result": {
                "content_type": "image/jpeg"
            }
        },
        {
            "name": "process_image",
            "pipeline": {
                "configuration": {
                    "pipeline_type": "transformers.AutoProcessor",
                    "no_generator": true
                },
                "from_pretrained_arguments": {
                    "model_name": "microsoft/Florence-2-large",
                    "trust_remote_code": true
                },
                "arguments": {
                    "text": "<DETAILED_CAPTION>",
                    "images": "previous_result:input_image",
                    "return_tensors": "pt"
                }
            }
        },
        {
            "name": "model",
            "pipeline": {
                "configuration": {
                    "pipeline_type": "transformers.AutoModelForCausalLM",
                    "no_generator": true,
                    "generate": true
                },
                "from_pretrained_arguments": {
                    "model_name": "microsoft/Florence-2-large",
                    "trust_remote_code": true
                },
                "arguments": {
                    "input_ids": "previous_result:process_image.input_ids",
                    "pixel_values": "previous_result:process_image.pixel_values",
                    "max_new_tokens": 4096,
                    "num_beams": 3,
                    "do_sample": false
                }
            }
        },
        {
            "name": "decode",
            "task": {
                "command": "batch_decode_post_process",
                "pipeline_reference": "process_image",
                "arguments": {
                    "generated_ids": "previous_result:model.generated_ids",
                    "task": "<DETAILED_CAPTION>"
                }
            },
            "result": {
                "content_type": "text/plain"
            }
        },
        {
            "name": "messages",
            "task": {
                "command": "format_chat_message",
                "arguments": {
                    "system_prompt": "You are a helpful AI assistant that creates prompts for text to image generative AI. When supplied input generate only the prompt.",
                    "user_message": "previous_result:decode"
                }
            },
            "result": {
                "content_type": "application/json"
            }
        },
        {
            "name": "augment_prompt",
            "pipeline": {
                "configuration": {
                    "pipeline_type": "transformers.pipeline",
                    "no_generator": true
                },
                "from_pretrained_arguments": {
                    "task": "text-generation"
                },
                "model": {
                    "configuration": {
                        "pipeline_type": "transformers.AutoModelForCausalLM"
                    },
                    "from_pretrained_arguments": {
                        "model_name": "microsoft/Phi-3.5-mini-instruct",
                        "device_map": "cuda",
                        "torch_dtype": "{auto}",
                        "trust_remote_code": true
                    }
                },
                "tokenizer": {
                    "configuration": {
                        "pipeline_type": "transformers.AutoTokenizer"
                    },
                    "from_pretrained_arguments": {
                        "model_name": "microsoft/Phi-3.5-mini-instruct"
                    }
                },
                "arguments": {
                    "text_inputs": "previous_result:messages",
                    "max_new_tokens": 500,
                    "return_full_text": false,
                    "do_sample": false
                }
            },
            "result": {
                "content_type": "text/plain"
            }
        },
        {
            "name": "flux",
            "pipeline": {
                "configuration": {
                    "pipeline_type": "FluxPipeline",
                    "offload": "sequential"
                },
                "from_pretrained_arguments": {
                    "model_name": "black-forest-labs/FLUX.1-dev",
                    "torch_dtype": "torch.bfloat16"
                },
                "arguments": {
                    "prompt": "previous_result:augment_prompt.generated_text",
                    "num_inference_steps": 25,
                    "num_images_per_prompt": 1,
                    "guidance_scale": 3.5,
                    "max_sequence_length": 512
                }
            },
            "result": {
                "content_type": "image/jpeg"
            }
        }
    ]
}